quarkus.application.name=devspaces-quarkus-crud-demo

## HTTP configuration
quarkus.http.port=8080
quarkus.jackson.serialization-inclusion=non-empty
quarkus.http.test-port=0

## CORS
quarkus.http.cors=true

quarkus.datasource.db-kind=h2
%dev.quarkus.datasource.jdbc.url=jdbc:h2:mem:test
# quarkus.hibernate-orm.packages=org.acme.hibernate.orm.panache.entity,org.acme.hibernate.orm.panache.repository

# In prod we rely on Service Biding Operator (chek if it is properly installed on your OCP Cluster)
%prod.quarkus.kubernetes-service-binding.services.postgresql.api-version=postgres-operator.crunchydata.com/v1beta1
%prod.quarkus.kubernetes-service-binding.services.postgresql.kind=PostgresCluster
%prod.quarkus.kubernetes-service-binding.services.postgresql.name=pg-cluster
%prod.quarkus.datasource.db-kind=postgresql
# no need to enter these manually anymore, SBO will take care magically
# %prod.quarkus.datasource.username=quarkus
# %prod.quarkus.datasource.password=quarkus
# %prod.quarkus.datasource.jdbc.url=jdbc:postgresql://pgdb/quarkus
# %prod.quarkus.datasource.jdbc.max-size=8
# %prod.quarkus.datasource.jdbc.min-size=3

# quarkus.hibernate-orm.datasource=fruits-db
quarkus.hibernate-orm.database.generation=drop-and-create
quarkus.hibernate-orm.log.sql=true
quarkus.hibernate-orm.sql-load-script=import.sql

# Container image
# used to build images locally or on CI/CD workflows
quarkus.container-image.build=false
quarkus.container-image.push=false
# quarkus.container-image.builder=jib
# quarkus.container-image.builder=openshift
quarkus.container-image.registry=quay.io
quarkus.container-image.group=rafaeltuelho
quarkus.container-image.name=${quarkus.application.name}
#quarkus.openshift.namespace=${quarkus.application.name}-dev

# open API Config
quarkus.swagger-ui.always-include=true
quarkus.smallrye-openapi.path=/swagger
quarkus.swagger-ui.path=/swagger-ui

quarkus.log.level=INFO
# quarkus.log.category."org.hibernate".level=DEBUG
quarkus.kubernetes-client.trust-certs = true
quarkus.tls.trust-all=true
# Openshit deployment config
quarkus.openshift.route.expose=true